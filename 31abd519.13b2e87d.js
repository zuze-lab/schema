(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{108:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return i})),t.d(a,"metadata",(function(){return l})),t.d(a,"rightToc",(function(){return o})),t.d(a,"default",(function(){return b}));var n=t(1),r=t(6),s=(t(0),t(122)),i={id:"validating",title:"Validating",sidebar_label:"Validating"},l={id:"validating",title:"Validating",description:"## Sync vs Async",source:"@site/docs/validating.md",permalink:"/schema/docs/validating",editUrl:"https://github.com/zuze-lab/schema/edit/master/website/docs/validating.md",sidebar_label:"Validating",sidebar:"someSidebar",previous:{title:"Creating Schemas",permalink:"/schema/docs/creating-schemas"},next:{title:"Conditions",permalink:"/schema/docs/conditions"}},o=[{value:"Sync vs Async",id:"sync-vs-async",children:[]},{value:"Error Messages",id:"error-messages",children:[{value:"Global Error Messages",id:"global-error-messages",children:[]},{value:"Option to Validator",id:"option-to-validator",children:[]}]},{value:'<a name="defaults"></a>Default validation messages',id:"a-namedefaultsadefault-validation-messages",children:[]}],c={rightToc:o};function b(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(s.b)("wrapper",Object(n.a)({},c,t,{components:a,mdxType:"MDXLayout"}),Object(s.b)("h2",{id:"sync-vs-async"},"Sync vs Async"),Object(s.b)("p",null,"Almost all validation methods in ",Object(s.b)("strong",{parentName:"p"},"@zuze/schema")," come in two flavors, async (default) and sync. Take a look at the api ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"/schema/docs/schemas#isvalid"}),"schemas api")," for more information."),Object(s.b)("h2",{id:"error-messages"},"Error Messages"),Object(s.b)("p",null,"Error messages can be configured in several ways."),Object(s.b)("h3",{id:"global-error-messages"},"Global Error Messages"),Object(s.b)("p",null,"Error messages are passed as the ",Object(s.b)("inlineCode",{parentName:"p"},"message")," ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"/schema/docs/type-reference#validationoptions"}),"ValidationOption"),"."),Object(s.b)("p",null,"Default error messages are defined ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"#defaults"}),"below"),"."),Object(s.b)("p",null,"Global error messages are simply defined as a map where the keys can be"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"${schemaType}.${validatorName}")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"${validatorName}")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"default"))),Object(s.b)("p",null,"You can override global error messages like this:"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const messages = {\n    `required`: 'This field is required',\n    `string.required`: 'This string is required',\n}\n\nvalidateSync(string(required()), { messages }); // ValidationError: This string is required\nvalidateSync(number(required()), { messages }); // ValidationError: This field is required\n")),Object(s.b)("h3",{id:"option-to-validator"},"Option to Validator"),Object(s.b)("p",null,"Almost all validators accept message as a parameter in the ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"/schema/docs/validators#message"}),"last argument"),"."),Object(s.b)("p",null,"This can be used to configure specific error messages for a given validator:"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"getErrorsSync(object({\n    firstName: string(tests(min(5, { message: 'You have a really short first name' }))),\n    lastName: string(label('Last Name'), tests(min(5)));\n}),{});\n\n/*\n {\n     firstName: 'You have a really short first name,\n     lastName: 'Last Name must not be shorter than 5 characters\n }\n*/\n\n")),Object(s.b)("h4",{id:"as-functions"},"As functions"),Object(s.b)("p",null,"Both global and validator specific error messages can be specified as functions or strings that can be interpolated. "),Object(s.b)("p",null,"By default ",Object(s.b)("inlineCode",{parentName:"p"},"label")," and ",Object(s.b)("inlineCode",{parentName:"p"},"path")," are provided as interpolation parameters. All over validators provide their own interpolation parameters specific to the validator (you can always override/extend these params using the ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"/schema/docs/validators#params"}),"params")," option to a validator)."),Object(s.b)("h4",{id:"as-strings"},"As strings"),Object(s.b)("p",null,"When supplying error messages as strings values inside ",Object(s.b)("inlineCode",{parentName:"p"},"${}")," are interpolated. "),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"Note:")," Do ",Object(s.b)("strong",{parentName:"p"},"NOT")," put your message in backticks ``` if it is a string, this will treat it as a ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals"}),"template literal")," which results in immediate interpolation rather than at validation time."),Object(s.b)("h2",{id:"a-namedefaultsadefault-validation-messages"},Object(s.b)("a",{name:"defaults"}),"Default validation messages"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"{\n  default: '${label} is invalid',\n  required: '${label} is required',\n  between: '${label} must be between ${low} and ${high}',\n  defined: '${label} must be defined',\n  different: '${label} cannot be the same as ${value}',\n  same: '${label} must be the same as ${value}',\n  not: '${label} must not be ${value}',\n  is: '${label} must be ${value}',\n  includes: '${label} must include ${value}',\n  matches: '${label} must match ${regexp}',\n  typeError:\n    '${label} must be a ${schema} type, unable to coerce/use value ${value}',\n  oneOf: ({ label, values }) =>\n    `${label} must be ${\n      values.length === 1 ? values[0] : `one of ${values.join(', ')}`\n    }`,\n  notOneOf: ({ label, values }) =>\n    `${label} must not be ${\n      values.length === 1 ? values[0] : `one of ${values.join(', ')}`\n    }`,\n   email: '${label} must be a valid e-mail address',    \n  'string.max': '${label} must not be longer than ${max} characters',\n  'string.min': '${label} must not be shorter than ${min} characters',  \n  'string.between': '${label} must be between ${low} and ${high} characters',\n  'date.max': ({ label, max }) =>\n    `${label} must not be after ${max.getTime ? max.toISOString() : max}`,\n  'number.max': '${label} must be no more than ${max}',\n  'array.max': '${label} must have no more than ${max} items',\n  'array.between': '${label} must have between ${low} and ${high} items',\n  'date.min': ({ label, min }) =>\n    `${label} must be after ${min.getTime ? min.toISOString() : min}`,\n  'array.min': '${label} must have at least ${min} items',\n  'number.min': '${label} must be no less than ${min}'\n}\n")))}b.isMDXComponent=!0},122:function(e,a,t){"use strict";t.d(a,"a",(function(){return m})),t.d(a,"b",(function(){return p}));var n=t(0),r=t.n(n);function s(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){s(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=r.a.createContext({}),b=function(e){var a=r.a.useContext(c),t=a;return e&&(t="function"==typeof e?e(a):l({},a,{},e)),t},m=function(e){var a=b(e.components);return r.a.createElement(c.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return r.a.createElement(r.a.Fragment,{},a)}},d=Object(n.forwardRef)((function(e,a){var t=e.components,n=e.mdxType,s=e.originalType,i=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=b(t),d=n,p=m["".concat(i,".").concat(d)]||m[d]||u[d]||s;return t?r.a.createElement(p,l({ref:a},c,{components:t})):r.a.createElement(p,l({ref:a},c))}));function p(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var s=t.length,i=new Array(s);i[0]=d;var l={};for(var o in a)hasOwnProperty.call(a,o)&&(l[o]=a[o]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var c=2;c<s;c++)i[c]=t[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);