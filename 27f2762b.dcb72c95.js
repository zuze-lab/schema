/*! For license information please see 27f2762b.dcb72c95.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{107:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return s})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return i})),a.d(t,"default",(function(){return p}));var n=a(1),r=a(6),c=(a(0),a(122)),o=a(124),s={id:"extending",title:"Extending",sidebar_label:"Extending"},l={id:"extending",title:"Extending",description:"import { AstFn, ZuzeTabs } from '../src/examples/tabs';",source:"@site/docs/extending.md",permalink:"/schema/docs/extending",editUrl:"https://github.com/zuze-lab/schema/edit/master/website/docs/extending.md",sidebar_label:"Extending",sidebar:"someSidebar",previous:{title:"Conditions",permalink:"/schema/docs/conditions"},next:{title:"Schemas",permalink:"/schema/docs/schemas"}},i=[{value:"Creating Validators",id:"creating-validators",children:[{value:"Async",id:"async",children:[]},{value:"Accepting Arguments",id:"accepting-arguments",children:[]}]},{value:"Creating Transforms",id:"creating-transforms",children:[]}],b={rightToc:i};function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"One of the best parts of ",Object(c.b)("strong",{parentName:"p"},"@zuze/schema")," (aside from the cool ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/schema/docs/ast#conditions"}),"conditions"),") is the ability to extend it with your own custom validators/transforms."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Note:")," There are some special rules about using custom transforms/validators when using the ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/schema/docs/ast#custom-transformsvalidators"}),"AST API"),"."),Object(c.b)("h2",{id:"creating-validators"},"Creating Validators"),Object(c.b)("p",null,"Validators are simple objects ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/schema/docs/type-reference#validatordefinition"}),"definitions"),", the only required properties are ",Object(c.b)("inlineCode",{parentName:"p"},"name")," and ",Object(c.b)("inlineCode",{parentName:"p"},"test"),"."),Object(c.b)("p",null,"For convenience there's a ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/schema/docs/utilities#test"}),"helper method")," to help in creating custom tests."),Object(c.b)("p",null,"No matter what type of validator ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#async"}),"async")," or ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#sync"}),"sync")," the validator must return a boolean or ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/schema/docs/type-reference#validationerror"}),"ValidationError"),", the latter can be created using the ",Object(c.b)("inlineCode",{parentName:"p"},"createError")," method passed in to the validator function."),Object(c.b)("p",null,"The signature of a validator test looks like:"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"test(\n    value: any, \n    { \n        schema: SchemaDefinition, \n        options: ValidationOptions, \n        createError: ({message?: string or () => string, params?: object, name?: string }), \n        resolve: (optionalRef: any) => resolvedValue\n    }\n) : boolean | ValidationError | Promise<boolean | ValidationError> \n")),Object(c.b)("p",null,"To return a ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/schema/docs/type-reference#validationerror"}),"ValidationError"),":"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const mustBeJim = (value, {createError}) => value === 'jim' || createError();\n")),Object(c.b)("p",null,"If ",Object(c.b)("inlineCode",{parentName:"p"},"optionalRef")," is not a ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/schema/docs/conditions#ref"}),"ref")," then it will be returned, otherwise the resolved value will be returned:"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const myTest = (arg) => (value,{resolve}) => {\n    console.log(resolve(arg));\n};\n\nconst context = { a: 'jim' }\n\nvalidate(mixed(tests(myTest('a'))), 'some value'); // logs 'a';\nvalidate(mixed(tests(myTest(ref('$a')))), 'some value', { context } ); // logs 'jim'\n")),Object(c.b)("h3",{id:"async"},"Async"),Object(c.b)("p",null,"Async validators are trivial to create - just use async-await."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Note:")," ",Object(c.b)("inlineCode",{parentName:"p"},"async")," validators will ",Object(c.b)("strong",{parentName:"p"},"not be run")," (a ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/schema/docs/utilities#warning"}),"warning")," will be logged) in the schema is being validated synchronously."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const mustBeSomethingAsync = async (value,{createError}) => {\n    try {\n        await someAsyncCall(value);\n        return true;\n    } catch(err) {\n        return createError({message:err})\n    }\n}\n")),Object(c.b)("h3",{id:"accepting-arguments"},"Accepting Arguments"),Object(c.b)("p",null,"Most validators require arguments to function correct like:"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"min(10);\nbetween(10,15);\noneOf(['a','b',ref('fieldA')])\n")),Object(c.b)("p",null,"To create a validator that accepts arguments is straightforward:"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"\nconst containsCharater = character = test(\n    'containsCharacter',\n    (value,{createError,resolve}) => value.matches(new RegExp(resolve(character)))\n)\n\nconst context = { char: 'i' };\nmixed(tests(containsCharacter(ref('$char'))), 'jim', { context });\n")),Object(c.b)("h2",{id:"creating-transforms"},"Creating Transforms"),Object(c.b)("p",null,Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/schema/docs/type-reference#transformfn"}),"Transform functions")," are run in the order they have been added to a ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/schema/docs/type-reference#schemadefinition"}),"SchemaDefinition")," (unless strict is false). ",Object(c.b)("strong",{parentName:"p"},"@zuze/schema")," includes a lot of neat ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/schema/docs/transforms"}),"transforms")," by default, but in case you wanted to extend it, it's pretty easy:"),Object(c.b)(o.a,{mdxType:"AstFn"},Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const replaceAllAsWith = replaceWith => val => val.replace(/a/gi,replaceWith);\n\nconst schema = createSchema(\n    {\n        schema: 'string',\n        transforms: [['replaceAllAsWith','b']]\n    },\n    {\n        transforms: { replaceAllAsWith: () => replaceAllAsWith }\n    }\n);\ncast(schema, `Alas, it's too late!`); // 'blbs, it's too lbte!'\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const replaceAllAsWith = replaceWith => \n    val => val.replace(/a/gi,replaceWith);\n\nconst schema = string(transforms(replaceAllAsWith('b')))\ncast(schema, `Alas, it's too late!`); // 'blbs, it's too lbte!'\n"))))}p.isMDXComponent=!0},121:function(e,t,a){var n;!function(){"use strict";var a={}.hasOwnProperty;function r(){for(var e=[],t=0;t<arguments.length;t++){var n=arguments[t];if(n){var c=typeof n;if("string"===c||"number"===c)e.push(n);else if(Array.isArray(n)&&n.length){var o=r.apply(null,n);o&&e.push(o)}else if("object"===c)for(var s in n)a.call(n,s)&&n[s]&&e.push(s)}}return e.join(" ")}e.exports?(r.default=r,e.exports=r):void 0===(n=function(){return r}.apply(t,[]))||(e.exports=n)}()},122:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return d}));var n=a(0),r=a.n(n);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},c=Object.keys(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=r.a.createContext({}),b=function(e){var t=r.a.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):s({},t,{},e)),a},p=function(e){var t=b(e.components);return r.a.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,c=e.originalType,o=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),p=b(a),m=n,d=p["".concat(o,".").concat(m)]||p[m]||u[m]||c;return a?r.a.createElement(d,s({ref:t},i,{components:a})):r.a.createElement(d,s({ref:t},i))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=a.length,o=new Array(c);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var i=2;i<c;i++)o[i]=a[i];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"},124:function(e,t,a){"use strict";a.d(t,"b",(function(){return m})),a.d(t,"a",(function(){return d}));var n=a(0),r=a.n(n),c=a(121),o=a.n(c),s=a(93),l=a.n(s);const i=37,b=39;var p=function(e){const{block:t,children:a,defaultValue:c,values:s}=e,[p,u]=Object(n.useState)(c),m=[];return r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:o()("tabs",{"tabs--block":t})},s.map(({value:e,label:t})=>r.a.createElement("li",{role:"tab",tabIndex:"0","aria-selected":p===e,className:o()("tab-item",l.a.tabItem,{"tab-item--active":p===e}),key:e,ref:e=>m.push(e),onKeyDown:e=>((e,t,a)=>{switch(a.keyCode){case b:((e,t)=>{const a=e.indexOf(t)+1;e[a]?e[a].focus():e[0].focus()})(e,t);break;case i:((e,t)=>{const a=e.indexOf(t)-1;e[a]?e[a].focus():e[e.length-1].focus()})(e,t)}})(m,e.target,e),onFocus:()=>u(e),onClick:()=>u(e)},t))),r.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},n.Children.toArray(a).filter(e=>e.props.value===p)[0]))};var u=function(e){return r.a.createElement("div",null,e.children)};a(122);const m=({children:e,tabs:t,default:a})=>r.a.createElement(p,{defaultValue:a||t[0],values:t.map(e=>({label:e,value:e}))},t.map((t,a)=>r.a.createElement(u,{key:t,value:t},e[a]))),d=({children:e,link:t})=>r.a.createElement(r.a.Fragment,null,r.a.createElement(m,{tabs:["ast","functional"]},e),t&&r.a.createElement(r.a.Fragment,null,r.a.createElement("a",{target:"_blank",href:t},"Try it on CodeSandbox!"),r.a.createElement("hr",null),r.a.createElement("br",null)))}}]);