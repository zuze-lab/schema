(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{85:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return o})),n.d(t,"default",(function(){return u}));var a=n(3),r=n(7),c=(n(0),n(91)),s=n(95),i={id:"utilities",title:"Utilities",sidebar_label:"Utilities"},l={unversionedId:"utilities",id:"utilities",isDocsHomePage:!1,title:"Utilities",description:"Utility methods are methods designed to functionally manipulate a schema definition.",source:"@site/docs/utilities.md",slug:"/utilities",permalink:"/schema/docs/utilities",editUrl:"https://github.com/zuze-lab/schema/edit/master/website/docs/utilities.md",version:"current",sidebar_label:"Utilities",sidebar:"someSidebar",previous:{title:"Validators",permalink:"/schema/docs/validators"},next:{title:"AST",permalink:"/schema/docs/ast"}},o=[{value:"nullable",id:"nullable",children:[]},{value:"typeError",id:"typeerror",children:[]},{value:"def",id:"def",children:[]},{value:"label",id:"label",children:[]},{value:"meta",id:"meta",children:[]},{value:"tests",id:"tests",children:[]},{value:"test",id:"test",children:[]},{value:"transforms",id:"transforms",children:[]},{value:"conditions",id:"conditions",children:[]},{value:"when/condition",id:"whencondition",children:[]},{value:"ref",id:"ref",children:[]},{value:"without",id:"without",children:[]},{value:"of",id:"of",children:[]},{value:"shape",id:"shape",children:[]},{value:"withoutAny",id:"withoutany",children:[]},{value:"warnings",id:"warnings",children:[]}],b={rightToc:o};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"Utility methods are methods designed to functionally manipulate a schema definition."),Object(c.b)("p",null,"AST examples are provided, where applicable, for the sake of completeness."),Object(c.b)("h2",{id:"nullable"},"nullable"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"nullable(isNullable: boolean = true)"))),Object(c.b)("p",null,"Indicates whether ",Object(c.b)("inlineCode",{parentName:"p"},"null")," is a valid value for this schema."),Object(c.b)(s.a,{mdxType:"AstFn"},Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"isValidSync(createSchema({nullable:true}), nullable()),null); // true\nisValidSync(createSchema({}) ,null); // false\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"isValidSync(mixed(tests(required()), nullable()),null); // true\nisValidSync(mixed(tests(required())) ,null); // false\n"))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Note:")," ",Object(c.b)("inlineCode",{parentName:"p"},"nullable() === nullable(true)")),Object(c.b)("h2",{id:"typeerror"},"typeError"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"typeError(string | ({value,label}) => string)"))),Object(c.b)("p",null,"Sets the error message for the typeError. ",Object(c.b)("inlineCode",{parentName:"p"},"value")," and ",Object(c.b)("inlineCode",{parentName:"p"},"label")," are available as interpolation parameters."),Object(c.b)("h2",{id:"def"},"def"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"def(value | () => value)"))),Object(c.b)("p",null,"Sets the default value of a schema when the provided value is ",Object(c.b)("inlineCode",{parentName:"p"},"undefined"),"."),Object(c.b)(s.a,{mdxType:"AstFn"},Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"cast(createSchema({default:'jim'})); // \"jim\"\ncast(createSchema({default:() => new Date()})), undefined); // Sun Mar 15 2020 11:26:32 GMT-0300 (Atlantic Daylight \n")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"cast(mixed(def('jim')), undefined); // \"jim\"\ncast(mixed(def(() => new Date()),undefined); // Sun Mar 15 2020 11:26:32 GMT-0300 (Atlantic Daylight Time)\n"))),Object(c.b)("h2",{id:"label"},"label"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"label(string | () => string)"))),Object(c.b)("p",null,"Sets the label on a schema - used for interpolation in error messages."),Object(c.b)(s.a,{mdxType:"AstFn"},Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"{\n    schema:'string',\n    label:'firstName'\n}\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"string(label('firstName'));\n"))),Object(c.b)("h2",{id:"meta"},"meta"),Object(c.b)("p",null,"Sets the meta property on a schema"),Object(c.b)(s.a,{mdxType:"AstFn"},Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"{\n    schema:'string',\n    meta: {\n        someKey:'someVal'\n    }\n}\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"string(meta({someKey:'someVal'}));\n"))),Object(c.b)("h2",{id:"tests"},"tests"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"tests(...ValidatorDefinition[])"))),Object(c.b)("p",null,"Adds tests to a schema"),Object(c.b)(s.a,{mdxType:"AstFn"},Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const schema = {\n    schema: 'string',\n    tests: ['required',['min',10]]\n};\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"string(tests(required(),min(10)))\n"))),Object(c.b)("h2",{id:"test"},"test"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"(name: string,TestFn: (value,{schema,options}) => boolean | ValidationError | Promise<boolean | ValidationError>)"))),Object(c.b)("p",null,"Functional way to create a validator"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const isJim = test('isJim',value => value === 'jim');\n\nconst async = test('asyncValidator',async value => {\n    try {\n        await doSomething(value);\n        return true;\n    } catch(err) {\n        return false;\n    }\n});\n\nmixed(tests(isJim,async));\n\n// create a validator that accepts an argument\nconst isThing = (arg) => test('isThing',value => value === arg);\nmixed(tests(isThing('one')));\n")),Object(c.b)("h2",{id:"transforms"},"transforms"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"transforms(...TransformFn[])"))),Object(c.b)("p",null,"Adds transforms to a schema"),Object(c.b)(s.a,{mdxType:"AstFn"},Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const schema = {\n    schema: 'string',\n    transforms: ['strip','uppercase']\n};\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"string(transforms(strip(),uppercase()))\n"))),Object(c.b)("h2",{id:"conditions"},"conditions"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"conditions(...Condition[])"))),Object(c.b)("p",null,"Adds conditions to a schema"),Object(c.b)(s.a,{mdxType:"AstFn"},Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const schema = {\n    schema: 'string',\n    conditions: [\n        {\n            when: { fieldA: { tests: [['is','jim']] } },\n            then: { tests: [['min', 10]] },\n            otherwise: { tests: [['min', 20]] }\n        }\n    ]\n};\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"string(conditions(when('fieldA',{\n    is: 'jim',\n    then: tests(min(10)),\n    otherwise: tests(min(20))\n})))\n"))),Object(c.b)("h2",{id:"whencondition"},"when/condition"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"when")," is an alias of the ",Object(c.b)("inlineCode",{parentName:"p"},"condition")),Object(c.b)(s.a,{mdxType:"AstFn"},Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const schema = {\n    schema:'string',\n    conditions: [\n        {\n            when: {\n                dep1: { tests:['required', ['is','jim']] },\n                dep2: { schema: 'number', tests: [['min',10],['max',20]]}\n            },\n            then:{\n                schema: 'string',\n                tests: ['required']\n            },\n            otherwise:{\n                schema: 'number',\n                tests: [['min',10]]\n            }\n        }\n    ]\n}\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const first = when(\n    ['dep1','dep2'],\n    (dep1,dep2,schema) => nextSchema)\n);\n\nconst second = when(\n    ['dep1','dep2'],\n    {\n        is: (dep1,dep2) => boolean,\n        then: Schema | Partial<Schema> | (schema: Schema) => nextSchema,\n        otherwise: Schema | Partial<Schema> | (schema: Schema) => nextSchema\n    }\n);\n"))),Object(c.b)("h2",{id:"ref"},"ref"),Object(c.b)("p",null,"Create a ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/schema/docs/conditions#refs"}),"reference")," to another field or ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/schema/docs/conditions#context"}),"context")),Object(c.b)(s.a,{mdxType:"AstFn"},Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const schema = {\n    schema: 'object',\n    shape: {\n        fieldA: {\n            schema: 'string',\n            tests: [['oneOf',[{ref:'fieldA'},ref:{'$context.field'}]]]\n        }\n    }\n}\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const schema = object({\n    fieldA: string(tests(\n        oneOf([\n            ref('fieldA'),\n            ref('$context.field')\n        ])\n    ))\n})\n"))),Object(c.b)("hr",null),Object(c.b)("p",null,"The following two utility method are used to manipulate a schema definition "),Object(c.b)("h2",{id:"without"},"without"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"without(property: string, schema: Schema, ...refs: any[]): Schema")),Object(c.b)("p",null,"Removes a property from a schema definition. If the property is an array it removes any reference given by ",Object(c.b)("inlineCode",{parentName:"p"},"...refs")," from the array."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const schema = string(label('my field'));\nconst labelessSchema = without('label', schema);\n\n// IMPORTANT: schema !== labelessSchema\n\nconst minTest = min(10);\nconst maxTest = max(20);\n\nconst schema = string(tests(minTest, maxTest));\n\n// returns a schema without minTest\nconst withoutMin = without('test', schema, minTest);\n")),Object(c.b)("h2",{id:"of"},"of"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"of(schema: Schema)"))),Object(c.b)("p",null,"Defines the inner schema of an array schema."),Object(c.b)(s.a,{mdxType:"AstFn"},Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"{\n    schema: 'array',\n    of: { schema: 'number', tests: [['min',10]] }\n}\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"array(of(number(tests(min(10)))));\n"))),Object(c.b)("h2",{id:"shape"},"shape"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"shape({[key: string]: Schema})"))),Object(c.b)("p",null,"Defines the inner schema of an object schema."),Object(c.b)(s.a,{mdxType:"AstFn"},Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"{\n    schema: 'object',\n    shape: {\n        fieldA: { schema: 'number', tests: [['min', 10]] },\n        fieldB: { schema: 'string', tests: ['required'] }\n    }\n}\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"object(shape({\n    fieldA: number(tests(min(10))),\n    fieldB: string(tests(required()))\n}))\n"))),Object(c.b)("h2",{id:"withoutany"},"withoutAny"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"withoutAny(property: string, schema: Schema): Schema")),Object(c.b)("p",null,"Removes all transforms/conditions/tests from a schema"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const schema = string(tests(min(10),max(20)));\nconst withoutValidations = withoutAny('test',schema);\n")),Object(c.b)("h2",{id:"warnings"},"warnings"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"warnings(shouldWarn: boolean = false)"))),Object(c.b)("p",null,"There are certain warnings that occur in ",Object(c.b)("strong",{parentName:"p"},"@zuze/schema")," that you may want to suppress in a production environment. Warnings are enabled by default and can be turned off by calling ",Object(c.b)("inlineCode",{parentName:"p"},"warnings(false)"),"."))}u.isMDXComponent=!0},90:function(e,t,n){"use strict";function a(e){var t,n,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(r&&(r+=" "),r+=n);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}t.a=function(){for(var e,t,n=0,r="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(r&&(r+=" "),r+=t);return r}},91:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=r.a.createContext({}),b=function(e){var t=r.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=b(e.components);return r.a.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},p=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,s=e.parentName,o=l(e,["components","mdxType","originalType","parentName"]),u=b(n),p=a,d=u["".concat(s,".").concat(p)]||u[p]||m[p]||c;return n?r.a.createElement(d,i(i({ref:t},o),{},{components:n})):r.a.createElement(d,i({ref:t},o))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,s=new Array(c);s[0]=p;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var o=2;o<c;o++)s[o]=n[o];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},93:function(e,t,n){"use strict";var a=n(0),r=n(94);t.a=function(){var e=Object(a.useContext)(r.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},94:function(e,t,n){"use strict";var a=n(0),r=Object(a.createContext)(void 0);t.a=r},95:function(e,t,n){"use strict";n.d(t,"b",(function(){return d})),n.d(t,"a",(function(){return j}));var a=n(0),r=n.n(a),c=n(93),s=n(90),i=n(53),l=n.n(i),o=37,b=39;var u=function(e){var t=e.lazy,n=e.block,i=e.children,u=e.defaultValue,m=e.values,p=e.groupId,d=e.className,j=Object(c.a)(),h=j.tabGroupChoices,O=j.setTabGroupChoices,f=Object(a.useState)(u),g=f[0],y=f[1];if(null!=p){var N=h[p];null!=N&&N!==g&&m.some((function(e){return e.value===N}))&&y(N)}var v=function(e){y(e),null!=p&&O(p,e)},w=[];return r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(s.a)("tabs",{"tabs--block":n},d)},m.map((function(e){var t=e.value,n=e.label;return r.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":g===t,className:Object(s.a)("tabs__item",l.a.tabItem,{"tabs__item--active":g===t}),key:t,ref:function(e){return w.push(e)},onKeyDown:function(e){!function(e,t,n){switch(n.keyCode){case b:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case o:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(w,e.target,e)},onFocus:function(){return v(t)},onClick:function(){v(t)}},n)}))),t?Object(a.cloneElement)(i.filter((function(e){return e.props.value===g}))[0],{className:"margin-vert--md"}):r.a.createElement("div",{className:"margin-vert--md"},i.map((function(e,t){return Object(a.cloneElement)(e,{key:t,hidden:e.props.value!==g})}))))},m=n(3);var p=function(e){var t=e.children,n=e.hidden,a=e.className;return r.a.createElement("div",Object(m.a)({role:"tabpanel"},{hidden:n,className:a}),t)},d=(n(91),function(e){var t=e.children,n=e.tabs,a=e.default;return r.a.createElement(u,{defaultValue:a||n[0],values:n.map((function(e){return{label:e,value:e}}))},n.map((function(e,n){return r.a.createElement(p,{key:e,value:e},t[n])})))}),j=function(e){var t=e.children,n=e.link;return r.a.createElement(r.a.Fragment,null,r.a.createElement(d,{tabs:["ast","functional"]},t),n&&r.a.createElement(r.a.Fragment,null,r.a.createElement("a",{target:"_blank",href:n},"Try it on CodeSandbox!"),r.a.createElement("hr",null),r.a.createElement("br",null)))}}}]);